# !!! Generated by Puppet
[graph_explorer]
listen_host = <%= scope.lookupvar('graph_explorer::listen_host') %>
listen_port = <%= scope.lookupvar('graph_explorer::listen_port') %>
filename_metrics = <%= scope.lookupvar('graph_explorer::filename_metrics') %>
log_file = <%= scope.lookupvar('graph_explorer::log_directory') %>/graph_explorer.log

[graphite]
## need to connect to graphite
# the url that the graph-explorer daemon will use to connect to graphite
url_server = <%= scope.lookupvar('graph_explorer::graphite_url_server') %>
# the url that the graph renderer in browser will use to connect to graphite
url_client = <%= scope.lookupvar('graph_explorer::graphite_url_client') %>
username = <%= scope.lookupvar('graph_explorer::graphite_username') %>
password = <%= scope.lookupvar('graph_explorer::graphite_password') %>

[anthracite]
## optional, to get annotated events on your graphs
# (the clientside graph renderer talks directly to it')
# this will point to your anthracite index in elastic search
# host = localhost
# port = 9200
# index = anthracite
# leave host empty to disable
host = <%= scope.lookupvar('graph_explorer::anthracite_host') %>
port = <%= scope.lookupvar('graph_explorer::anthracite_port') %>
index = <%= scope.lookupvar('graph_explorer::anthracite_index') %>
# url to add events by clicking on graphs. usually this is just an extra /events/add
# but if you use plugins they can provide custom paths for custom forms/schema
# leave this empty to disable support for adding, inspecting and editing events
# add_url = http://anthracite-machine/events/add"
add_url = <%= scope.lookupvar('graph_explorer::anthracite_add_url') %>

[locations]
# Here you can opt to load extra things from custom directories
# in addition to, or overriding what comes with GE by default.
# the magic string "**builtins**" refers to the default locations.
# Each list element should be on an indented new line.
plugins_structured_metrics = <%= scope.lookupvar('graph_explorer::locations_plugins_structured_metrics') %>
dashboards = <%= scope.lookupvar('graph_explorer::locations_dashboards') %>

[elasticsearch]
## graph explorer daemon needs to connect to elasticsearch,
# you typically run an ES on the same host as GE.
host = <%= scope.lookupvar('graph_explorer::elasticsearch_host') %>
port = <%= scope.lookupvar('graph_explorer::elasticsearch_port') %>
index = <%= scope.lookupvar('graph_explorer::elasticsearch_index') %>
# irrespective of limit, never get more metrics than this from ES:
limit_es_metrics = <%= scope.lookupvar('graph_explorer::elasticsearch_limit_es_metrics') %>

# if metrics stored in graphite already look like proto2 (they contain a ='),
# should we still actively update them in ES?
# change to False if you already have them up to date in ES,
# for example when you use something like carbon-tagger.
process_native_proto2 = <%= scope.lookupvar('graph_explorer::process_native_proto2') %>

[alerting]
## for users of the alerting service
alerting = <%= scope.lookupvar('graph_explorer::alerting') %>
db = <%= scope.lookupvar('graph_explorer::alerting_db_dir') %>/alerting.db
smtp = <%= scope.lookupvar('graph_explorer::alerting_smtp') %>
from = <%= scope.lookupvar('graph_explorer::alerting_from') %>
# per rule, max 10 notifications per this many seconds.
backoff = <%= scope.lookupvar('graph_explorer::alerting_backoff') %>
# base location of graph-explorer, in emails well refer to this + /rules/view/id
base_uri = <%= scope.lookupvar('graph_explorer::alerting_base_uri') %>

[collectd]
## for users of collectd
# whether the StoreRates is set in your collectd write_graphite plugin config
StoreRates = <%= scope.lookupvar('graph_explorer::collectd_StoreRates') %>
prefix = <%= scope.lookupvar('graph_explorer::collectd_prefix') %>